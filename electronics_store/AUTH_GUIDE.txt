–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ –ø—Ä–æ—Ñ–∏–ª—å –≤ –ø—Ä–æ–µ–∫—Ç–µ

1) –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
- Pillow ‚Äî –¥–ª—è –ø–æ–ª—è ImageField (—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: pip install Pillow)

2) –ù–∞—Å—Ç—Ä–æ–π–∫–∏ (electronics_store/electronics_store/settings.py)
- DEBUG=True –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- ALLOWED_HOSTS = ['127.0.0.1', 'localhost']
- STATIC_URL, STATICFILES_DIRS —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã
- MEDIA_URL = '/media/' –∏ MEDIA_ROOT = BASE_DIR / 'media' (–¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–≤)

3) –ö–æ—Ä–Ω–µ–≤—ã–µ URL (electronics_store/electronics_store/urls.py)
from django.contrib import admin
from django.urls import path, include
from django.conf import settings
from django.conf.urls.static import static

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('main.urls')),
]

if settings.DEBUG:
    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)

4) URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (electronics_store/main/urls.py)
from django.urls import path
from . import views

urlpatterns = [
    path('', views.home, name='home'),
    path('catalog/', views.catalog, name='catalog'),
    path('contacts/', views.contacts, name='contacts'),
    path('profile/', views.profile, name='profile'),
    path('cart/', views.cart, name='cart'),
    path('login/', views.login_view, name='login'),
    path('register/', views.register, name='register'),
    path('logout/', views.logout_view, name='logout'),
    # API
    path('api/register', views.api_register, name='api_register'),
    path('api/login', views.api_login, name='api_login'),
    path('api/profile/update', views.api_profile_update, name='api_profile_update'),
]

5) –ú–æ–¥–µ–ª–∏ (electronics_store/main/models.py)
- UserProfile: OneToOne —Å User, –ø–æ–ª—è: patronymic, phone, birth_date, address, avatar, created_at, updated_at
- –°–∏–≥–Ω–∞–ª—ã post_save: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è 
- UserSession: —Ñ–∏–∫—Å–∞—Ü–∏—è –≤—Ö–æ–¥–æ–≤ (user, session_key, ip_address, user_agent, timestamps)

6) –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è (electronics_store/main/views.py)
–ì–ª–∞–≤–Ω—ã–µ view:
- @ensure_csrf_cookie home/login_view/register ‚Äî –æ—Ç–¥–∞—é—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É—é—Ç –≤—ã–¥–∞—á—É cookie csrftoken
- profile (login_required) ‚Äî —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ—Ñ–∏–ª—è, –æ—Ç–¥–∞—ë—Ç user_profile –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏
- logout_view ‚Äî –≤—ã—Ö–æ–¥ –∏ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏

API:
- api_register (POST JSON) ‚Äî —Å–µ—Ä–≤–µ—Ä–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è, —Å–æ–∑–¥–∞–Ω–∏–µ User, –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ first_name/last_name, –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ patronymic —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ user.userprofile
  –ü–æ–ª—è –≤—Ö–æ–¥–∞: name, surname, patronymic (–æ–ø—Ü.), login, email, password, password_repeat, rules (bool)
  –í–æ–∑–≤—Ä–∞—Ç: { ok: True } –ª–∏–±–æ { ok: False, errors: {field: msg} }

- api_login (POST JSON) ‚Äî authenticate(username=login, password), login(request, user), —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ UserSession
  –í–æ–∑–≤—Ä–∞—Ç: { ok: True } –∏–ª–∏ –æ—à–∏–±–∫–∏

- api_profile_update (POST JSON, login_required) ‚Äî –æ–±–Ω–æ–≤–ª—è–µ—Ç User.first_name/last_name –∏ UserProfile.patronymic/phone/address
  –í–æ–∑–≤—Ä–∞—Ç: { ok: True } –∏–ª–∏ errors

7) –®–∞–±–ª–æ–Ω—ã –∏ JS
–ì–ª–æ–±–∞–ª—å–Ω—ã–π —à–∞–±–ª–æ–Ω (electronics_store/templates/base.html):
- –ü–æ–¥–∫–ª—é—á—ë–Ω Bootstrap –∏ —Å—Ç–∞—Ç–∏–∫–∞
- –í—Å—Ç–∞–≤–ª–µ–Ω helper –¥–ª—è CSRF, –∫–æ—Ç–æ—Ä—ã–π —á–∏—Ç–∞–µ—Ç csrftoken –∏–∑ cookies –∏ –∫–ª–∞–¥—ë—Ç –≤ window.__csrftoken

–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (electronics_store/templates/register.html):
- –§–æ—Ä–º–∞ —Å –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
- –û—Ç–ø—Ä–∞–≤–∫–∞ fetch('/api/register', { method: 'POST', headers: { 'Content-Type': 'application/json', 'X-Requested-With': 'XMLHttpRequest', 'X-CSRFToken': window.__csrftoken }, body: JSON.stringify(payload) })
- –ü—Ä–∏ —É—Å–ø–µ—Ö–µ: –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ'

–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (electronics_store/templates/login.html):
- –§–æ—Ä–º–∞ –ª–æ–≥–∏–Ω–∞
- fetch('/api/login', { method: 'POST', headers: {..., 'X-CSRFToken': window.__csrftoken}, body: JSON.stringify({ login, password }) })
- –ü—Ä–∏ —É—Å–ø–µ—Ö–µ: —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ '/'

–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ—Ñ–∏–ª—è (electronics_store/templates/profile.html):
- –§–æ—Ä–º–∞ –¥–ª—è first_name, last_name, patronymic, phone, address
- fetch('/api/profile/update', POST JSON + X-CSRFToken)

8) CSRF
- –í–∫–ª—é—á—ë–Ω —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π CsrfViewMiddleware
- –°—Ç—Ä–∞–Ω–∏—Ü—ã, —Å –∫–æ—Ç–æ—Ä—ã—Ö –∏–¥—É—Ç POST —á–µ—Ä–µ–∑ fetch, –ø–æ–ª—É—á–∞—é—Ç cookie —á–µ—Ä–µ–∑ @ensure_csrf_cookie
- –í—Å–µ POST-–∑–∞–ø—Ä–æ—Å—ã –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ 'X-CSRFToken'

9) –ü—Ä–æ–≤–µ—Ä–∫–∞ (–ª–æ–∫–∞–ª—å–Ω–æ)
1. –ó–∞–ø—É—Å–∫: .\\venv\\Scripts\\Activate.ps1 –∏ –∑–∞—Ç–µ–º python manage.py runserver
2. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: /register ‚Üí –∑–∞–ø–æ–ª–Ω–∏—Ç—å —Ñ–æ—Ä–º—É ‚Üí POST /api/register –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å { ok: true }
3. –í—Ö–æ–¥: /login ‚Üí –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ‚Üí POST /api/login –≤–µ—Ä–Ω—ë—Ç { ok: true } –∏ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
4. –ü—Ä–æ—Ñ–∏–ª—å: /profile ‚Üí –∏–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ ‚Üí POST /api/profile/update –≤–µ—Ä–Ω—ë—Ç { ok: true }

10) –¢–∏–ø–æ–≤—ã–µ –ø—Ä–∏—á–∏–Ω—ã —Å–±–æ–µ–≤ –∏ —Ä–µ—à–µ–Ω–∏—è
- 403 –ø—Ä–∏ POST: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç CSRF ‚Üí —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ cookie csrftoken –µ—Å—Ç—å –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ X-CSRFToken –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è
- 400 –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: —Å–µ—Ä–≤–µ—Ä–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ errors ‚Äî –æ—Ç–æ–±—Ä–∞–∑—è—Ç—Å—è –ø–æ–¥ –ø–æ–ª—è–º–∏
- 500 –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: —Å–º. –ª–æ–≥–∏ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞; —á–∞—â–µ –≤—Å–µ–≥–æ —Å–≤—è–∑–∞–Ω —Å —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å—é –ª–æ–≥–∏–Ω–∞/email

–≠—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —É–∂–µ –≤–Ω–µ—Å–µ–Ω—ã –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø—Ä–æ–µ–∫—Ç–∞ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã.

11) –ü–æ–ª–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤

11.1) templates/base.html
----------------------------------------
<!DOCTYPE html>
<html lang="—Ä—É">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ú–∞–≥–∞–∑–∏–Ω —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏</title>
    {% load static %}
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="{% static 'css/style.css' %}">
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container">
            <a class="navbar-brand d-flex align-items-center" href="{% url 'home' %}">
                <img src="{% static 'images/Logo.png' %}" alt="–õ–æ–≥–æ—Ç–∏–ø" width="50" height="50" class="me-2">
                <span class="fs-3 fw-bold">TechStore</span>
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto">
                    <li class="nav-item"><a class="nav-link fs-5" href="{% url 'home' %}">–ì–ª–∞–≤–Ω–∞—è</a></li>
                    <li class="nav-item"><a class="nav-link fs-5" href="{% url 'catalog' %}">–ö–∞—Ç–∞–ª–æ–≥</a></li>
                    <li class="nav-item"><a class="nav-link fs-5" href="{% url 'contacts' %}">–ö–æ–Ω—Ç–∞–∫—Ç—ã</a></li>
                </ul>
                <div class="navbar-nav">
                    {% if user.is_authenticated %}
                        <a class="nav-link fs-5" href="{% url 'profile' %}">üë§ –ü—Ä–æ—Ñ–∏–ª—å</a>
                        <a class="nav-link fs-5" href="{% url 'logout' %}">üö™ –í—ã–π—Ç–∏</a>
                    {% else %}
                        <a class="nav-link fs-5" href="{% url 'login' %}">üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</a>
                        <a class="nav-link fs-5" href="{% url 'register' %}">üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</a>
                    {% endif %}
                    <a class="nav-link fs-5" href="{% url 'cart' %}">üõí –ö–æ—Ä–∑–∏–Ω–∞</a>
                </div>
            </div>
        </div>
    </nav>
    <main>
        {% block content %}{% endblock %}
    </main>
    <footer class="bg-dark text-light mt-5 py-4">
        <div class="container">
            <div class="row">
                <div class="col-md-4"><h5>–û –Ω–∞—Å</h5><p>–õ—É—á—à–∏–π –º–∞–≥–∞–∑–∏–Ω —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏ —Å 2024 –≥–æ–¥–∞. –ö–∞—á–µ—Å—Ç–≤–æ, –≥–∞—Ä–∞–Ω—Ç–∏—è, –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å.</p></div>
                <div class="col-md-4"><h5>–ö–æ–Ω—Ç–∞–∫—Ç—ã</h5><p>üìû +7 (999) 123-45-67</p><p>‚úâÔ∏è info@techstore.ru</p></div>
                <div class="col-md-4"><h5>–ú—ã –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö</h5><p>üì± VK | Telegram | YouTube</p></div>
            </div>
            <div class="text-center mt-3"><p>¬© 2024 TechStore. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p></div>
        </div>
    </footer>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>(function(){function getCookie(name){const value=`; ${document.cookie}`;const parts=value.split(`; ${name}=`);if(parts.length===2)return parts.pop().split(';').shift();return '';}window.__csrftoken=getCookie('csrftoken');})();</script>
    <script src="{% static 'js/script.js' %}"></script>
    </body>
    </html>

11.2) templates/register.html
----------------------------------------
{% extends 'base.html' %}
{% load static %}
{% block content %}
<div class="container py-5" style="max-width: 720px;">
    <h1 class="mb-4 text-center">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h1>
    <div class="card shadow-sm"><div class="card-body p-4">
        <form id="registerForm" novalidate>
            <div class="row g-3">
                <div class="col-md-4"><label class="form-label">–ò–º—è</label><input type="text" class="form-control" id="name" placeholder="–ò–≤–∞–Ω" required><div class="invalid-feedback" id="err-name"></div></div>
                <div class="col-md-4"><label class="form-label">–§–∞–º–∏–ª–∏—è</label><input type="text" class="form-control" id="surname" placeholder="–ò–≤–∞–Ω–æ–≤" required><div class="invalid-feedback" id="err-surname"></div></div>
                <div class="col-md-4"><label class="form-label">–û—Ç—á–µ—Å—Ç–≤–æ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</label><input type="text" class="form-control" id="patronymic" placeholder="–ò–≤–∞–Ω–æ–≤–∏—á"><div class="invalid-feedback" id="err-patronymic"></div></div>
                <div class="col-md-6"><label class="form-label">–õ–æ–≥–∏–Ω</label><input type="text" class="form-control" id="login" placeholder="ivan-90" required><div class="invalid-feedback" id="err-login"></div></div>
                <div class="col-md-6"><label class="form-label">Email</label><input type="email" class="form-control" id="email" placeholder="name@example.com" required><div class="invalid-feedback" id="err-email"></div></div>
                <div class="col-md-6"><label class="form-label">–ü–∞—Ä–æ–ª—å</label><input type="password" class="form-control" id="password" minlength="6" required><div class="invalid-feedback" id="err-password"></div></div>
                <div class="col-md-6"><label class="form-label">–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–∞—Ä–æ–ª—å</label><input type="password" class="form-control" id="password_repeat" minlength="6" required><div class="invalid-feedback" id="err-password_repeat"></div></div>
                <div class="col-12"><div class="form-check"><input class="form-check-input" type="checkbox" id="rules" required><label class="form-check-label" for="rules">–°–æ–≥–ª–∞—à–∞—é—Å—å —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</label><div class="invalid-feedback" id="err-rules"></div></div></div>
                <div class="col-12 d-grid d-md-flex justify-content-md-end gap-2"><button type="submit" class="btn btn-primary px-4">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button><a href="{% url 'login' %}" class="btn btn-outline-secondary">–£ –º–µ–Ω—è –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç</a></div>
            </div>
        </form>
    </div></div>
    <div class="alert alert-success mt-3 d-none" id="regSuccess">–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏.</div>
</div>
<script>(function(){const regCyr=/^[–ê-–Ø–∞-—è–Å—ë\-\s]+$/;const regLogin=/^[A-Za-z0-9\-]+$/;function setFieldError(id,message){const input=document.getElementById(id);const err=document.getElementById('err-'+id);if(message){input.classList.add('is-invalid');err.textContent=message;}else{input.classList.remove('is-invalid');err.textContent='';}}function clientValidate(){let ok=true;const name=document.getElementById('name').value.trim();const surname=document.getElementById('surname').value.trim();const patronymic=document.getElementById('patronymic').value.trim();const login=document.getElementById('login').value.trim();const email=document.getElementById('email').value.trim();const password=document.getElementById('password').value;const password_repeat=document.getElementById('password_repeat').value;const rules=document.getElementById('rules').checked;setFieldError('name',(!name?'–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–º—è':(!regCyr.test(name)?'–†–∞–∑—Ä–µ—à–µ–Ω—ã –∫–∏—Ä–∏–ª–ª–∏—Ü–∞, –ø—Ä–æ–±–µ–ª –∏ —Ç–∏—Ä–µ':'')));if(!name||!regCyr.test(name))ok=false;setFieldError('surname',(!surname?'–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é':(!regCyr.test(surname)?'–†–∞–∑—Ä–µ—à–µ–Ω—ã –∫–∏—Ä–∏–ª–ª–∏—Ü–∞, –ø—Ä–æ–±–µ–ª –∏ —Ç–∏—Ä–µ':'')));if(!surname||!regCyr.test(surname))ok=false;setFieldError('patronymic',patronymic&&!regCyr.test(patronymic)?'–†–∞–∑—Ä–µ—à–µ–Ω—ã –∫–∏—Ä–∏–ª–ª–∏—Ü–∞, –ø—Ä–æ–±–µ–ª –∏ —Ç–∏—Ä–µ':'');if(patronymic&&!regCyr.test(patronymic))ok=false;setFieldError('login',(!login?'–£–∫–∞–∂–∏—Ç–µ –ª–æ–≥–∏–Ω':(!regLogin.test(login)?'–¢–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω–∏—Ü–∞, —Ü–∏—Ñ—Ä—ã –∏ —Ç–∏—Ä–µ':'')));if(!login||!regLogin.test(login))ok=false;setFieldError('email',(!email?'–£–∫–∞–∂–∏—Ç–µ email':(!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)?'–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email':'')));if(!email||!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email))ok=false;setFieldError('password',(!password?'–ó–∞–¥–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å':(password.length<6?'–ú–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤':'')));if(!password||password.length<6)ok=false;setFieldError('password_repeat',(password_repeat!==password?'–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç':''));if(password_repeat!==password)ok=false;setFieldError('rules',(!rules?'–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏–µ':''));if(!rules)ok=false;return ok;}document.getElementById('registerForm').addEventListener('submit',async function(e){e.preventDefault();if(!clientValidate())return;const payload={name:document.getElementById('name').value.trim(),surname:document.getElementById('surname').value.trim(),patronymic:document.getElementById('patronymic').value.trim(),login:document.getElementById('login').value.trim(),email:document.getElementById('email').value.trim(),password:document.getElementById('password').value,password_repeat:document.getElementById('password_repeat').value,rules:document.getElementById('rules').checked};try{const res=await fetch('/api/register',{method:'POST',headers:{'Content-Type':'application/json','X-Requested-With':'XMLHttpRequest','X-CSRFToken':(window.__csrftoken||'')},body:JSON.stringify(payload)});const data=await res.json();if(!data.ok){for(const [field,msg]of Object.entries(data.errors||{})){setFieldError(field,msg);}return;}document.getElementById('regSuccess').classList.remove('d-none');this.reset();}catch(err){alert('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');}});})();</script>
{% endblock %}

11.3) templates/login.html
----------------------------------------
{% extends 'base.html' %}
{% load static %}
{% block content %}
<div class="container py-5" style="max-width: 520px;">
    <h1 class="mb-4 text-center">–í—Ö–æ–¥</h1>
    <div class="card shadow-sm"><div class="card-body p-4">
        <form id="loginForm" novalidate>
            <div class="mb-3"><label class="form-label">–õ–æ–≥–∏–Ω</label><input type="text" class="form-control" id="login" required><div class="invalid-feedback" id="err-login"></div></div>
            <div class="mb-3"><label class="form-label">–ü–∞—Ä–æ–ª—å</label><input type="password" class="form-control" id="password" required><div class="invalid-feedback" id="err-password"></div></div>
            <div class="d-grid"><button type="submit" class="btn btn-primary">–í–æ–π—Ç–∏</button></div>
        </form>
    </div></div>
    <div class="alert alert-danger mt-3 d-none" id="authError">–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å</div>
</div>
<script>(function(){function setFieldError(id,message){const input=document.getElementById(id);const err=document.getElementById('err-'+id);if(message){input.classList.add('is-invalid');err.textContent=message;}else{input.classList.remove('is-invalid');err.textContent='';}}document.getElementById('loginForm').addEventListener('submit',async function(e){e.preventDefault();const login=document.getElementById('login').value.trim();const password=document.getElementById('password').value;setFieldError('login',!login?'–£–∫–∞–∂–∏—Ç–µ –ª–æ–≥–∏–Ω':'');setFieldError('password',!password?'–£–∫–∞–∂–∏—Ç–µ –ø–∞—Ä–æ–ª—å':'');if(!login||!password)return;try{const res=await fetch('/api/login',{method:'POST',headers:{'Content-Type':'application/json','X-Requested-With':'XMLHttpRequest','X-CSRFToken':(window.__csrftoken||'')},body:JSON.stringify({login,password})});const data=await res.json();if(!data.ok){document.getElementById('authError').classList.remove('d-none');return;}window.location.href='/';}catch(err){document.getElementById('authError').classList.remove('d-none');}});})();</script>
{% endblock %}

11.4) templates/profile.html
----------------------------------------
{% extends 'base.html' %}
{% load static %}
{% block content %}
<div class="container py-5" style="max-width: 820px;">
    <h1 class="mb-4">–ü—Ä–æ—Ñ–∏–ª—å</h1>
    <div class="card shadow-sm"><div class="card-body p-4">
        <form id="profileForm">
            <div class="row g-3">
                <div class="col-md-4"><label class="form-label">–ò–º—è</label><input type="text" class="form-control" id="first_name" value="{{ request.user.first_name }}"><div class="invalid-feedback" id="err-first_name"></div></div>
                <div class="col-md-4"><label class="form-label">–§–∞–º–∏–ª–∏—è</label><input type="text" class="form-control" id="last_name" value="{{ request.user.last_name }}"><div class="invalid-feedback" id="err-last_name"></div></div>
                <div class="col-md-4"><label class="form-label">–û—Ç—á–µ—Å—Ç–≤–æ</label><input type="text" class="form-control" id="patronymic" value="{{ user_profile.patronymic }}"></div>
                <div class="col-md-6"><label class="form-label">–¢–µ–ª–µ—Ñ–æ–Ω</label><input type="text" class="form-control" id="phone" value="{{ user_profile.phone }}"></div>
                <div class="col-md-6"><label class="form-label">–ê–¥—Ä–µ—Å</label><input type="text" class="form-control" id="address" value="{{ user_profile.address }}"></div>
            </div>
            <div class="d-flex gap-2 mt-3"><button class="btn btn-primary" type="submit">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button><a href="{% url 'logout' %}" class="btn btn-outline-secondary">–í—ã–π—Ç–∏</a></div>
        </form>
        <div class="alert alert-success mt-3 d-none" id="saveOk">–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ</div>
    </div></div>
</div>
<script>(function(){function setErr(id,message){const input=document.getElementById(id);const err=document.getElementById('err-'+id);if(message){input.classList.add('is-invalid');err.textContent=message;}else{input.classList.remove('is-invalid');err.textContent='';}}document.getElementById('profileForm').addEventListener('submit',async function(e){e.preventDefault();const payload={first_name:document.getElementById('first_name').value.trim(),last_name:document.getElementById('last_name').value.trim(),patronymic:document.getElementById('patronymic').value.trim(),phone:document.getElementById('phone').value.trim(),address:document.getElementById('address').value.trim()};try{const res=await fetch('/api/profile/update',{method:'POST',headers:{'Content-Type':'application/json','X-Requested-With':'XMLHttpRequest','X-CSRFToken':(window.__csrftoken||'')},body:JSON.stringify(payload)});const data=await res.json();if(!data.ok){for(const [f,m]of Object.entries(data.errors||{}))setErr(f,m);return;}document.getElementById('saveOk').classList.remove('d-none');}catch(err){alert('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è');}});})();</script>
{% endblock %}